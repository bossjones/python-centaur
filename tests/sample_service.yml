name: sample-blog
ns: centaur
description: Sample Blog Service definition
type: service
protocol: http

datatypes:
  post:
    type: dict
    fields:
      title: {type: string}
      content: {type: maybe, base: {type: string}}
      author: {type: string}
      created_at: {type: string, format: isodatetime}
  postWithId:
    type: "post"
    fields:
      id: {type: integer}
  comment:
    type: dict
    fields:
      content: {type: string}
      email: {type: string, format: email}
      created_at: {type: string, format: isodatetime}
  commentWithId:
    type: comment
    fields:
      id: {type: integer}
      post_id: {type: integer}
  commentList:
    type: list
    items: {type: commentWithId}

interface:
  create_post:
    description: Create a new blog post
    request:
      method: POST
      url: '/posts/'
      json: post
    response:
      json: postWithId
  get_post:
    request:
      method: GET
      url: '/posts/{id}/'
      params:
        id: {type: integer}
    response:
      json: postWithId
  get_comments:
    description: Get Comments for blog post
    request:
      method: GET
      url: '/posts/{id}/comments/'
      params:
        id: {type: integer}
        limit: {type: integer}
        offset: {type: integer}
      defaults:
        limit: 10
        offset: 0
    response:
      json: postWithId
  create_comment:
    request:
      method: POST
      url: '/posts/{id}/comments/'
      params:
        id: {type: integer}
      json: comment
    response:
      json:
        type: dict
        fields:
          comments: commentList
